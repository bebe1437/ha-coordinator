<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="false">
    <property name="LOG_HOME" value="log" />
    <property name="FILE_DATE" value="%d{yyyy-MM-dd}"/>
    <!--<property name="DEFAULT_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level][%thread] %class.%M [Line:%line] %msg%n" />-->
    <property name="DEFAULT_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level][%thread] %logger{36} - %msg%n" />
    <property name="EXCEPTION_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%-5level][%thread] %class.%M [Line:%line] %ex{full}%n" />

    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>
    
    <!-- Console -->    
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${DEFAULT_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    
    <!-- Ap Log -->
    <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">    
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${DEFAULT_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/ha_${FILE_DATE}.%i.log</FileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- Exception Log -->
    <appender name="EXCEPTION" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${EXCEPTION_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.JaninoEventEvaluator">
                <expression>throwableProxy != null</expression>
            </evaluator>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/exception_${FILE_DATE}.log</FileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>500</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <includeCallerData>false</includeCallerData>
        <appender-ref ref="FILE" />
    </appender>

    <appender name="ASYNC_EXCEPTION" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>500</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <includeCallerData>false</includeCallerData>
        <appender-ref ref="EXCEPTION" />
    </appender>

    <!-- Root -->
    <root level="${logback.root.level:-INFO}">
        <if condition='!property("logback.stdout.enabled").equalsIgnoreCase("false")'>
            <then>
                <appender-ref ref="STDOUT" />
            </then>
        </if>
        <appender-ref ref="ASYNC_FILE" />
        <appender-ref ref="ASYNC_EXCEPTION" />
    </root>
    
</configuration>
